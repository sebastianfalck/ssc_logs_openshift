h1. üß∞ Jenkins Pipeline de Autosoporte para Microservicios

Este pipeline permite a los desarrolladores ejecutar acciones de diagn√≥stico y revisi√≥n sobre microservicios desplegados en OpenShift, de forma controlada, segura y autogestionada.

---

h2. ‚úÖ ¬øQu√© puedes hacer con este pipeline?

* Obtener logs del pod principal del microservicio.
* Ver la configuraci√≥n actual del deployment.
* Describir el estado completo de un pod.
* Ver el uso y l√≠mites de recursos (quotas).
* Listar pods activos en el namespace.
* Obtener secretos (con aprobaci√≥n en ambientes cr√≠ticos).
* Ver configmaps con sanitizaci√≥n autom√°tica.
* Recibir el resultado por correo autom√°ticamente.
* Validaci√≥n del entorno y pa√≠s.

---

h2. üîß Par√°metros del pipeline

|| Par√°metro || Tipo || Opciones || Descripci√≥n ||
| *NOMBRE*   | string | libre     | Nombre exacto del microservicio seg√∫n CSV |
| *AMBIENTE* | choice | dev, uat, prd, drs | Entorno en el que se encuentra el microservicio |
| *ACCION*   | choice | none, get logs, get deployment, describe pod, get quota, get pods, get secrets, get configmaps | Acci√≥n que deseas ejecutar sobre el microservicio |

---

h2. üåç Variables de entorno utilizadas

|| Variable || Descripci√≥n ||
| *REPO_URL*         | URL del repositorio Git con el archivo CSV de configuraci√≥n |
| *REPO_CREDENTIALS* | ID de la credencial Jenkins para acceso Git |
| *SERVER_INTERNAL*  | OpenShift interno (`dev`, `uat`) |
| *SERVER_EXTERNAL*  | OpenShift externo (`prd`) |
| *SERVER_DRS*       | Cl√∫ster DRS (contingencia) |
| *SENSITIVE_WORDS*  | Palabras clave para censura: _password, username, user, token, secret_ |

---

h2. üîÑ Flujo del pipeline

#1. _Checkout_ del repositorio (se espera el archivo ProjectsJenkinsCardifCSV.csv).  
#2. Lectura del archivo CSV y b√∫squeda del microservicio por nombre.  
#3. Validaci√≥n del pa√≠s del microservicio contra la ruta de ejecuci√≥n.  
#4. Autenticaci√≥n con `oc login` al cl√∫ster correspondiente.  
#5. Ejecuci√≥n de la acci√≥n seleccionada.  
#6. Sanitizaci√≥n autom√°tica (si aplica).  
#7. Env√≠o del resultado por correo al ejecutor.

---

h2. üîê Validaci√≥n por pa√≠s

El pipeline valida que el microservicio pertenezca al mismo pa√≠s del desarrollador, comparando:

* Columna `country` del CSV
* Nombre del subdirectorio en la ruta Jenkins (`env.WORKSPACE`)

Si no coinciden, se aborta la ejecuci√≥n con un mensaje de advertencia.

---

h2. ‚öôÔ∏è Acciones disponibles

|| Acci√≥n || Requiere Aprobaci√≥n || Censura datos || Detalles ||
| *get logs*       | No  | No  | Logs en tiempo real del pod. √ötil para detectar errores, fallas de conexi√≥n, trazabilidad de eventos. |
| *get deployment* | No  | No  | YAML del deployment. Incluye imagen, variables, probes, vol√∫menes, recursos, etc. |
| *describe pod*   | No  | No  | Describe el pod completo. Incluye estado, eventos, reinicios, vol√∫menes, probes. |
| *get quota*      | No  | No  | Consulta `ResourceQuota` y `LimitRange`. Muestra uso/consumo de CPU, memoria, objetos. |
| *get pods*       | No  | No  | Lista todos los pods con estado, edad, IP, imagen, reinicios, nodo, etc. |
| *get secrets*    | S√≠ (qa/prd) | S√≠ (qa/prd) | Extrae secretos (tokens, contrase√±as, etc.). Requiere aprobaci√≥n y censura autom√°tica. |
| *get configmaps* | No  | S√≠  | Muestra configmaps. Incluye propiedades (`application.yml`, `.properties`) con sanitizaci√≥n. |

---

h3. üßº Ejemplo de sanitizaci√≥n

Los valores sensibles ser√°n ocultados si la clave contiene alguna palabra definida en _SENSITIVE_WORDS_.

*Entrada original:*
{code}
database.password=SuperSecret123
api-token: abcd1234
<entry key="db.user">admin</entry>
{code}

*Salida censurada:*
{code}
database.password=****
api-token: ****
<entry key="db.user">****</entry>
{code}

---

h2. üìß Env√≠o por correo

* El resultado de la acci√≥n se guarda como _reporte.html_
* Se env√≠a autom√°ticamente al ejecutor (`BUILD_USER_EMAIL`)
* Asunto: _ACCION NOMBRE - AMBIENTE_
* Ejemplo: `get logs cliente-ms - dev`

---

h2. üìÅ Estructura del CSV de configuraci√≥n

El archivo `ProjectsJenkinsCardifCSV.csv` debe estar delimitado por punto y coma (`;`) y contener:

|| Columna || Descripci√≥n ||
| appName       | Nombre del microservicio |
| country       | Pa√≠s asociado |
| usage         | Tipo de uso (`internal`, `external`, etc.) |
| NameSpaceDev  | Namespace para `dev` |
| TokenDev      | Token para `dev` |
| NameSpaceUat  | Namespace para `uat` |
| TokenUat      | Token para `uat` |
| NameSpacePrd  | Namespace para `prd` |
| TokenPrd      | Token para `prd` |
| ...           | Otros ambientes si aplica |

---

h2. üß† Notas adicionales

* Si el microservicio no est√° en el CSV, el pipeline fallar√°.
* Si el pa√≠s del microservicio y el del workspace no coinciden, la ejecuci√≥n se aborta.
* En `qa` y `prd`, la acci√≥n `get secrets` solo puede ser aprobada por usuarios espec√≠ficos.
* El campo `TOKEN` es sensible y no debe imprimirse directamente.
* El pipeline es autosoportado, pero tiene controles para evitar accesos indebidos.

---

h2. üìé Contacto

Para soporte de este pipeline, contacta al equipo DevOps o crea un ticket en Jira con etiqueta: *soporte-jenkins-microservicios*.

